name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    # Run full test suite with 100% coverage before publishing
    - name: Install dev dependencies and run tests
      run: |
        pip install -e ".[dev,gpu]"
        pytest tests/ -v --cov=smoltrace --cov-report=term --cov-fail-under=100
        echo "✓ All tests passed with 100% coverage"

    # Code quality checks
    - name: Format and lint checks
      run: |
        black --check smoltrace tests
        isort --check-only smoltrace tests
        ruff check smoltrace tests
        echo "✓ Code quality checks passed"

    - name: Build package
      run: python -m build

    - name: Check package with twine
      run: twine check dist/*

    # Test installation before publishing
    - name: Test package installation
      run: |
        python -m venv test_env
        source test_env/bin/activate
        pip install dist/*.whl

        # Test imports
        python -c 'import smoltrace; print(f"Successfully imported smoltrace version: {smoltrace.__version__}")'
        python -c 'from smoltrace.cli import main; print("All core components imported successfully")'

        # Test CLI
        smoltrace-eval --help
        echo "✓ CLI tool works"

        deactivate
        rm -rf test_env

    - name: Publish to Test PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/* --skip-existing || echo "Package may already exist on Test PyPI"

    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
